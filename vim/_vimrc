" basic set up {{{
autocmd! bufwritepost $MYVIMRC source $MYVIMRC " auto reread .vimrc file after save {{{

set nocompatible
syntax on		" syntax for programming on
set number 		" set up line numbers
set showcmd 		" show comands in-action in the coman line
set lines=999 columns=999 " window to max size
set laststatus=2	" always see last command
set ruler
set autoread		" reread file
set mps+=<:>        " Add < and > to match map

set t_Co=256
colorscheme monokai " colorshema like Sublime Text
if has('win32') 
	set guifont=Consolas:h11:cANSI:cRUSSIAN::
endif
" file type detection
filetype plugin indent on
" Make backspace usefull
set backspace=indent,eol,start
fixdel " Fix my del please :)

if has('gui')
	set guioptions-=e " gui Tabs - off
	set guioptions-=T " gui icons - off
endif
" Add mouse
if has('mouse')
    set mouse=a
endif
set tabstop=4 shiftwidth=4 expandtab " Set up tabs
" }}}

" install plug-ins {{{
" I use vim-plug --> https://github.com/junegunn/vim-plug
call plug#begin('~/.vim/plugged')
    Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
    Plug 'majutsushi/tagbar'
	Plug 'ctrlpvim/ctrlp.vim'
	Plug 'bling/vim-airline'	
call plug#end()

" hot kays set-up {{{
" <F2> for save file 
nmap <F2> :w<cr> 
vmap <F2> <esc>:w<cr>a
imap <F2> <esc>:w<cr>a
" Find
nmap <C-f> /
vmap <C-f> <esc>/
imap <C-f> <esc>/
" Open Nerd tree by <F12>
map <F12> :NERDTreeToggle<cr>
" TagBar use on <F11>
map <F11> :TagbarToggle<cr>
" Use autocomplete by <C-Space>
inoremap <C-Space> <C-x><C-o>
" }}}
" Set up brackets autoclose {{{
" set () 
inoremap        (  ()<Left>
inoremap <expr> )  strpart(getline('.'), col('.')-1, 1) == ")" ? "\<Right>" : ")"
" ste {}
inoremap        {  {}<Left>
inoremap <expr> }  strpart(getline('.'), col('.')-1, 1) == "}" ? "\<Right>" : "}"
" ste ''
inoremap <expr> ' strpart(getline('.'), col('.')-1, 1) == "\'" ? "\<Right>" : "\'\'\<Left>"
" set ""
inoremap <expr> " strpart(getline('.'), col('.')-1, 1) == "\"" ? "\<Right>" : "\"\"\<Left>"
" }}}
" Plug-in setup {{{
" autocomplete
setlocal omnifunc=syntaxcomplete#Complete
set completeopt=menu,preview,longest
" vim-airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
" TagBar
if has('win32')
	let g:tagbar_ctags_bin = 'C:\ctags58\ctags.exe'
endif
" }}}
